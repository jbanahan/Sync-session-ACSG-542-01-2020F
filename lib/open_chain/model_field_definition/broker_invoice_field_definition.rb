module OpenChain; module ModelFieldDefinition; module BrokerInvoiceFieldDefinition
  def add_broker_invoice_fields
    add_fields CoreModule::BROKER_INVOICE, [
      make_broker_invoice_entry_field(1,:bi_brok_ref,:broker_reference,"Broker Reference",:string,lambda {|entry| entry.broker_reference}),
      [2,:bi_suffix,:suffix,"Suffix",:data_type=>:string],
      [3,:bi_invoice_date,:invoice_date,"Invoice Date",:data_type=>:date],
      [4,:bi_invoice_total,:invoice_total,"Total",:data_type=>:decimal],
      [5,:bi_customer_number,:customer_number,"Customer Number",:data_type=>:string],
      [6,:bi_to_name,:bill_to_name,"Bill To Name",:data_type=>:string],
      [7,:bi_to_add1,:bill_to_address_1,"Bill To Address 1",:data_type=>:string],
      [8,:bi_to_add2,:bill_to_address_2,"Bill To Address 2",:data_type=>:string],
      [9,:bi_to_city,:bill_to_city,"Bill To City",:data_type=>:string],
      [10,:bi_to_state,:bill_to_state,"Bill To State",:data_type=>:string],
      [11,:bi_to_zip,:bill_to_zip,"Bill To Zip",:data_type=>:string],
      make_broker_invoice_entry_field(12,:bi_entry_num,:entry_number,"Entry Number",:string,lambda {|entry| entry.entry_number}),
      make_broker_invoice_entry_field(13,:bi_release_date,:release_date,"Release Date",:datetime,lambda {|entry| entry.release_date}),
      [14,:bi_to_country_iso,:iso_code,"Bill To Country Code",{:data_type=>:string,
        :import_lambda=> lambda {|inv,data|
          cntry = Country.find_by_iso_code data
          return "Country with ISO code #{data} could not be found." unless cntry
          inv.bill_to_country_id = cntry.id
          "Bill to Country set to #{data}"
        },
        :export_lambda=> lambda {|inv| inv.bill_to_country_id.blank? ? "" : inv.bill_to_country.iso_code},
        :qualified_field_name => "(SELECT iso_code FROM countries WHERE countries.id = broker_invoices.bill_to_country_id)"
      }],
      make_broker_invoice_entry_field(15,:bi_mbols,:master_bills_of_lading,"Master Bills",:text,lambda {|entry| entry.master_bills_of_lading}),
      make_broker_invoice_entry_field(16,:bi_hbols,:house_bills_of_lading,"House Bills",:text,lambda {|entry| entry.house_bills_of_lading}),
      make_broker_invoice_entry_field(17,:bi_sbols,:sub_house_bills_of_lading,"Sub House Bills",:text,lambda {|entry| entry.sub_house_bills_of_lading}),
      make_broker_invoice_entry_field(18,:bi_it_numbers,:it_numbers,"IT Numbers",:text,lambda {|entry| entry.it_numbers}),
      make_broker_invoice_entry_field(19,:bi_duty_due_date,:duty_due_date,"Duty Due Date",:date,lambda {|entry| entry.duty_due_date},lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(20,:bi_carrier_code,:carrier_code,"Carrier Code",:string,lambda {|entry| entry.carrier_code}),
      make_broker_invoice_entry_field(21,:bi_total_packages,:total_packages,"Total Packages",:integer,lambda {|entry| entry.total_packages}),
      make_broker_invoice_entry_field(22,:bi_total_fees,:total_fees,"Total Fees",:decimal,lambda {|entry| entry.total_fees}),
      make_broker_invoice_entry_field(25, :bi_ent_total_duty, :total_duty, "Total Duty", :decimal, lambda {|entry| entry.total_duty}),
      make_broker_invoice_entry_field(26, :bi_ent_total_duty_direct, :total_duty_direct, "Total Duty Direct", :decimal, lambda {|entry| entry.total_duty_direct}),
      make_broker_invoice_entry_field(27, :bi_ent_entered_value, :entered_value, "Total Entered Value", :decimal, lambda {|entry| entry.entered_value}),
      make_broker_invoice_entry_field(28, :bi_ent_customer_references, :customer_references, "Customer References", :text, lambda {|entry| entry.customer_references}),
      make_broker_invoice_entry_field(29,:bi_ent_po_numbers,:po_numbers,"PO Numbers",:text,lambda {|entry| entry.po_numbers}),
      make_broker_invoice_entry_field(30,:bi_ent_mfids,:mfids,"MID Numbers",:text,lambda {|entry| entry.mfids}),
      make_broker_invoice_entry_field(31,:bi_ent_total_invoiced_value,:total_invoiced_value,"Total Commercial Invoice Value",:decimal,lambda {|entry| entry.total_invoiced_value}),
      make_broker_invoice_entry_field(32,:bi_ent_export_country_codes,:export_country_codes,"Country of Export Codes",:string,lambda {|entry| entry.export_country_codes}),
      make_broker_invoice_entry_field(33,:bi_ent_origin_country_codes,:origin_country_codes,"Country of Origin Codes",:string,lambda {|entry| entry.origin_country_codes}),
      make_broker_invoice_entry_field(34,:bi_ent_vendor_names,:vendor_names,"Vendor Names",:text,lambda {|entry| entry.vendor_names}),
      make_broker_invoice_entry_field(35,:bi_ent_spis,:special_program_indicators,"SPI(s),",:string,lambda {|entry| entry.special_program_indicators}),
      make_broker_invoice_entry_field(36,:bi_ent_export_date,:export_date,"Export Date",:date,lambda {|entry| entry.export_date}),
      make_broker_invoice_entry_field(37,:bi_ent_merch_desc,:merchandise_description,"Merchandise Description",:string,lambda {|entry| entry.merchandise_description}),
      make_broker_invoice_entry_field(38,:bi_ent_transport_mode_code,:transport_mode_code,"Mode of Transport",:string,lambda {|entry| entry.transport_mode_code}),
      make_broker_invoice_entry_field(39,:bi_ent_total_units,:total_units,"Total Units",:decimal,lambda {|entry| entry.total_units}),
      make_broker_invoice_entry_field(40,:bi_ent_total_units_uoms,:total_units_uoms,"Total Units UOMs",:string,lambda {|entry| entry.total_units_uoms}),
      make_broker_invoice_entry_field(41,:bi_ent_entry_port_code,:entry_port_code,"Port of Entry Code",:string,lambda {|entry| entry.entry_port_code}),
      make_broker_invoice_entry_field(42,:bi_ent_ult_con_code,:ult_consignee_code,"Ult Consignee Code",:string,lambda {|entry| entry.ult_consignee_code}),
      make_broker_invoice_entry_field(43,:bi_ent_ult_con_name,:ult_consignee_name,"Ult Consignee Name",:string,lambda {|entry| entry.ult_consignee_name}),
      make_broker_invoice_entry_field(44,:bi_ent_gross_weight,:gross_weight,"Gross Weight",:integer,lambda {|entry| entry.gross_weight}),
      make_broker_invoice_entry_field(45,:bi_ent_total_packages_uom,:total_packages_uom,"Total Packages UOM",:string,lambda {|entry| entry.total_packages_uom}),
      make_broker_invoice_entry_field(46,:bi_ent_cotton_fee,:cotton_fee,"Cotton Fee",:decimal,lambda {|entry| entry.cotton_fee}),
      make_broker_invoice_entry_field(47,:bi_ent_hmf,:hmf,"HMF",:decimal,lambda {|entry| entry.hmf}),
      make_broker_invoice_entry_field(48,:bi_ent_mpf,:mpf,"MPF",:decimal,lambda {|entry| entry.mpf}),
      make_broker_invoice_entry_field(49,:bi_ent_container_numbers,:container_numbers,"Container Numbers",:text,lambda {|entry| entry.container_numbers}),
      [50,:bi_currency,:currency,"Currency",{:data_type=>:decimal}],
      make_broker_invoice_entry_field(51,:bi_ent_importer_tax_id,:importer_tax_id,"Importer Tax ID",:string,lambda {|entry| entry.importer_tax_id}),
      make_broker_invoice_entry_field(52,:bi_destination_state,:destination_state,"Destination State",:string,lambda {|entry| entry.destination_state}),
      make_broker_invoice_entry_field(53,:bi_container_sizes,:container_sizes,"Container Sizes",:string,lambda {|entry| entry.container_sizes}),
      [54,:bi_lading_port_name,:name,"Port of Lading Name",{
        :data_type=>:string,
        :import_lambda => lambda {|inv,data| "Port of Lading cannot be set via invoice upload."},
        :export_lambda => lambda {|inv| (inv.entry.blank? || inv.entry.lading_port.blank?) ? "" : inv.entry.lading_port.name},
        :qualified_field_name => "(SELECT name from ports where schedule_k_code = (select lading_port_code from entries where entries.id = broker_invoices.entry_id))"
      }],
      make_broker_invoice_entry_field(55,:bi_cargo_control_number,:cargo_control_number,"Cargo Control Number",:string, lambda{|entry| entry.cargo_control_number}),
      [56,:bi_invoice_number,:invoice_number,"Invoice Number",{:data_type=>:string}],
      [57,:bi_source_system,:source_system,"Source System",{:data_type=>:string,:can_view_lambda=>lambda {|u| u.company.broker?}}],
      make_broker_invoice_entry_field(58,:bi_ent_part_numbers,:part_numbers,"Part Numbers",:text,lambda {|entry| entry.part_numbers}),
      make_broker_invoice_entry_field(59,:bi_ent_commercial_invoice_numbers,:commercial_invoice_numbers,"Commercial Invoice Numbers",:text,lambda {|entry| entry.commercial_invoice_numbers}),
      make_broker_invoice_entry_field(60,:bi_ent_total_gst, :total_gst, "Total GST", :decimal, lambda {|entry| entry.total_gst}),
      make_broker_invoice_entry_field(61,:bi_ent_total_duty_gst, :total_duty_gst, "Total Duty & GST", :decimal, lambda {|entry| entry.total_duty_gst}),
      make_broker_invoice_entry_field(62,:bi_ent_direct_shipment_date, :direct_shipment_date, "Direct Shipment Date", :date, lambda {|entry| entry.direct_shipment_date}),
      make_broker_invoice_entry_field(63,:bi_ent_across_sent_date, :across_sent_date, "ACROSS Sent Date", :datetime, lambda {|entry| entry.across_sent_date}),
      make_broker_invoice_entry_field(64,:bi_ent_pars_ack_date, :pars_ack_date, "PARS ACK Date", :datetime, lambda {|entry| entry.pars_ack_date}),
      make_broker_invoice_entry_field(65,:bi_ent_cadex_accept_date, :cadex_accept_date, "CADEX Accept Date", :datetime, lambda {|entry| entry.cadex_accept_date}),
      make_broker_invoice_entry_field(66,:bi_ent_cadex_sent_date, :cadex_sent_date, "CADEX Sent Date", :datetime, lambda {|entry| entry.cadex_sent_date}),
      make_broker_invoice_entry_field(67,:bi_ent_k84_month, :k84_month, "K84 Month", :integer, lambda {|entry| entry.k84_month}),
      make_broker_invoice_entry_field(68,:bi_ent_exam_ordered_date, :exam_ordered_date, "Exam Ordered Date", :datetime, lambda {|entry| entry.exam_ordered_date}),
      make_broker_invoice_entry_field(69,:bi_ent_fda_transmit_date, :fda_transmit_date, "FDA Transmit Date", :datetime, lambda {|entry| entry.fda_transmit_date}),
      make_broker_invoice_entry_field(70,:bi_ent_entry_filed_date, :entry_filed_date, "Entry Filed Date", :datetime, lambda {|entry| entry.entry_filed_date}),
      make_broker_invoice_entry_field(71,:bi_ent_trucker_called_date, :trucker_called_date, "Trucker Called Date", :datetime, lambda {|entry| entry.trucker_called_date}),
      make_broker_invoice_entry_field(72,:bi_ent_arrival_date,:arrival_date,"Arrival Date",:datetime,lambda {|entry| entry.arrival_date}),
      make_broker_invoice_entry_field(73,:bi_ent_available_date,:available_date,"Available Date",:date,lambda {|entry| entry.available_date}),
      make_broker_invoice_entry_field(74,:bi_ent_b3_print_date,:b3_print_date,"B3 Print Date",:datetime,lambda {|entry| entry.b3_print_date}),
      make_broker_invoice_entry_field(75,:bi_ent_bond_type,:bond_type,"Bond Type",:string,lambda {|entry| entry.bond_type}),
      make_broker_invoice_entry_field(76,:bi_ent_ca_entry_type,:entry_type,"Entry Type (CA)",:string,lambda {|entry| entry.entry_type}),
      make_broker_invoice_entry_field(77,:bi_ent_carrier_name, :carrier_name,"Carrier Name",:string,lambda {|entry| entry.carrier_name}),
      make_broker_invoice_entry_field(78,:bi_ent_comp_num,:company_number,"Broker Company Number",:string,lambda {|entry| entry.company_number}),
      make_broker_invoice_entry_field(79,:bi_ent_consignee_address_1,:consignee_address_1,"Ult Consignee Address 1",:string,lambda {|entry| entry.consignee_address_1}),
      make_broker_invoice_entry_field(80,:bi_ent_consignee_address_2,:consignee_address_2,"Ult Consignee Address 2",:string,lambda {|entry| entry.consignee_address_2}),      
      make_broker_invoice_entry_field(81,:bi_ent_consignee_city,:consignee_city,"Ult Consignee City",:string,lambda {|entry| entry.consignee_city}),
      make_broker_invoice_entry_field(82,:bi_ent_consignee_state,:consignee_state,"Ult Consignee State",:string,lambda {|entry| entry.consignee_state}),
      make_broker_invoice_entry_field(83,:bi_ent_cust_name,:customer_name,"Customer Name",:string, lambda {|entry| entry.customer_name}),
      make_broker_invoice_entry_field(84,:bi_ent_cust_num,:customer_number,"Customer Number",:string,lambda {|entry| entry.customer_number}),
      make_broker_invoice_entry_field(85,:bi_ent_daily_statement_approved_date,:daily_statement_approved_date,"Daily Statement Approved Date",:date,lambda {|entry| entry.daily_statement_approved_date}),
      make_broker_invoice_entry_field(86,:bi_ent_daily_statement_due_date,:daily_statement_due_date,"Daily Statement Due",:date,lambda {|entry| entry.daily_statement_due_date}),
      make_broker_invoice_entry_field(87,:bi_ent_daily_statement_number,:daily_statement_number,"Daily Statement Number",:string,lambda {|entry| entry.daily_statement_number}),
      make_broker_invoice_entry_field(88,:bi_ent_delivery_order_pickup_date,:delivery_order_pickup_date,"Delivery Order Pickup Date",:datetime,lambda {|entry| entry.delivery_order_pickup_date}),
      make_broker_invoice_entry_field(89,:bi_ent_departments,:departments,"Departments",:text,lambda {|entry| entry.departments}),
      make_broker_invoice_entry_field(90,:bi_ent_div_num,:division_number,"Broker Division Number",:string,lambda {|entry| entry.division_number}),
      make_broker_invoice_entry_field(91,:bi_ent_docs_received_date,:docs_received_date,"Docs Received Date",:date,lambda {|entry| entry.docs_received_date}),
      make_broker_invoice_entry_field(92,:bi_ent_edi_received_date,:edi_received_date,"EDI Received Date",:date,lambda {|entry| entry.edi_received_date}),
      make_broker_invoice_entry_field(93,:bi_ent_eta_date,:eta_date,"ETA Date",:date,lambda {|entry| entry.eta_date}),
      make_broker_invoice_entry_field(94,:bi_ent_export_state_code,:export_state_codes,"Export State Codes",:string,lambda {|entry| entry.export_state_codes}),
      make_broker_invoice_entry_field(95,:bi_ent_fcl_lcl,:fcl_lcl,"FCL/LCL",:string,lambda {|entry| entry.fcl_lcl}),
      make_broker_invoice_entry_field(96,:bi_ent_fda_message,:fda_message,"FDA Message",:string,lambda {|entry| entry.fda_message}),
      make_broker_invoice_entry_field(97,:bi_ent_fda_pending_release_line_count,:fda_pending_release_line_count,"FDA Pending Release Line Count",:integer,lambda {|entry| entry.fda_pending_release_line_count}),
      make_broker_invoice_entry_field(98,:bi_ent_fda_release_date,:fda_release_date,"FDA Release Date",:datetime,lambda {|entry| entry.fda_release_date}),
      make_broker_invoice_entry_field(99,:bi_ent_fda_review_date,:fda_review_date,"FDA Review Date",:datetime,lambda {|entry| entry.fda_review_date}),
      make_broker_invoice_entry_field(100,:bi_ent_file_logged_date,:file_logged_date,"File Logged Date",:datetime,lambda {|entry| entry.file_logged_date}),
      make_broker_invoice_entry_field(101,:bi_ent_final_delivery_date,:final_delivery_date,"Final Delivery Date",:datetime,lambda {|entry| entry.final_delivery_date}),
      make_broker_invoice_entry_field(102,:bi_ent_final_statement_date,:final_statement_date,"Final Statement Date",:date,lambda {|entry| entry.final_statement_date}),
      make_broker_invoice_entry_field(103,:bi_ent_first_do_issued_date,:first_do_issued_date,"First DO Date",:datetime,lambda {|entry| entry.first_do_issued_date}),
      make_broker_invoice_entry_field(104,:bi_ent_first_it_date,:first_it_date,"First IT Date",:date,lambda {|entry| entry.first_it_date}),
      make_broker_invoice_entry_field(105,:bi_ent_first_release,:first_release_date,"First Release Date",:datetime,lambda {|entry| entry.first_release_date}),
      make_broker_invoice_entry_field(106,:bi_ent_free_date,:free_date,"Free Date",:date,lambda {|entry| entry.free_date}),
      make_broker_invoice_entry_field(107,:bi_ent_freight_pickup_date,:freight_pickup_date,"Freight Pickup Date",:datetime,lambda {|entry| entry.freight_pickup_date}),
      make_broker_invoice_entry_field(108,:bi_ent_invoice_paid_date,:invoice_paid_date,"Invoice Paid Date",:datetime,lambda {|entry| entry.invoice_paid_date}),
      make_broker_invoice_entry_field(109,:bi_ent_isf_accepted_date,:isf_accepted_date,"ISF Accepted Date",:datetime,lambda {|entry| entry.isf_accepted_date}),
      make_broker_invoice_entry_field(110,:bi_ent_isf_sent_date,:isf_sent_date,"ISF Sent Date",:datetime,lambda {|entry| entry.isf_sent_date}),
      make_broker_invoice_entry_field(111,:bi_ent_k84_due_date,:k84_due_date,"K84 Due Date",:date,lambda {|entry| entry.k84_due_date}),
      make_broker_invoice_entry_field(112,:bi_ent_k84_receive_date,:k84_receive_date,"K84 Received Date",:date,lambda {|entry| entry.k84_receive_date}),
      make_broker_invoice_entry_field(113,:bi_ent_lading_port_code,:lading_port_code,"Port of Lading Code",:string,lambda {|entry| entry.lading_port_code}),
      make_broker_invoice_entry_field(114,:bi_ent_last_exported_from_source,:last_exported_from_source,"System Extract Date",:datetime,lambda {|entry| entry.last_exported_from_source}),
      make_broker_invoice_entry_field(115,:bi_ent_liq_date,:liquidation_date,"Liquidation Date",:datetime,lambda {|entry| entry.liquidation_date}),
      make_broker_invoice_entry_field(116,:bi_ent_liquidation_action_code,:liquidation_action_code,"Liquidated - Action Code",:string,lambda {|entry| entry.liquidation_action_code}),
      make_broker_invoice_entry_field(117,:bi_ent_liquidation_action_description,:liquidation_action_description,"Liquidated - Action",:string,lambda {|entry| entry.liquidation_action_description}),
      make_broker_invoice_entry_field(118,:bi_ent_liquidation_ada,:liquidation_ada,"Liquidated - ADA",:decimal,lambda {|entry| entry.liquidation_ada}),
      make_broker_invoice_entry_field(119,:bi_ent_liquidation_cvd,:liquidation_cvd,"Liquidated - CVD",:decimal,lambda {|entry| entry.liquidation_cvd}),
      make_broker_invoice_entry_field(120,:bi_ent_liquidation_duty,:liquidation_duty,"Liquidated - Duty",:decimal,lambda {|entry| entry.liquidation_duty}),
      make_broker_invoice_entry_field(121,:bi_ent_liquidation_extension_code,:liquidation_extension_code,"Liquidated - Extension Code",:string,lambda {|entry| entry.liquidation_extension_code}),
      make_broker_invoice_entry_field(122,:bi_ent_liquidation_extension_count,:liquidation_extension_count,"Liquidated - # of Extensions",:integer,lambda {|entry| entry.liquidation_extension_count}),
      make_broker_invoice_entry_field(123,:bi_ent_liquidation_extension_description,:liquidation_extension_description,"Liquidated - Extension",:string,lambda {|entry| entry.liquidation_extension_description}),
      make_broker_invoice_entry_field(124,:bi_ent_liquidation_fees,:liquidation_fees,"Liquidated - Fees",:decimal,lambda {|entry| entry.liquidation_fees}),
      make_broker_invoice_entry_field(125,:bi_ent_liquidation_tax,:liquidation_tax,"Liquidated - Tax",:decimal,lambda {|entry| entry.liquidation_tax}),
      make_broker_invoice_entry_field(126,:bi_ent_liquidation_total,:liquidation_total,"Liquidated - Total",:decimal,lambda {|entry| entry.liquidation_total}),
      make_broker_invoice_entry_field(127,:bi_ent_liquidation_type,:liquidation_type,"Liquidated - Type",:string,lambda {|entry| entry.liquidation_type}),
      make_broker_invoice_entry_field(128,:bi_ent_liquidation_type_code,:liquidation_type_code,"Liquidated - Type Code",:string,lambda {|entry| entry.liquidation_type_code}),
      make_broker_invoice_entry_field(129,:bi_ent_location_of_goods,:location_of_goods,"Location of Goods",:string,lambda {|entry| entry.location_of_goods}),
      make_broker_invoice_entry_field(130,:bi_ent_monthly_statement_due_date,:monthly_statement_due_date,"PMS Due Date",:date,lambda {|entry| entry.monthly_statement_due_date}),
      make_broker_invoice_entry_field(131,:bi_ent_monthly_statement_number,:monthly_statement_number,"PMS #",:string,lambda {|entry| entry.monthly_statement_number}),
      make_broker_invoice_entry_field(132,:bi_ent_monthly_statement_paid_date,:monthly_statement_paid_date,"PMS Paid Date",:date,lambda {|entry| entry.monthly_statement_paid_date}),
      make_broker_invoice_entry_field(133,:bi_ent_monthly_statement_received_date,:monthly_statement_received_date,"PMS Received Date",:date,lambda {|entry| entry.monthly_statement_received_date}),
      make_broker_invoice_entry_field(134,:bi_ent_origin_state_code,:origin_state_codes,"Origin State Codes",:string,lambda {|entry| entry.origin_state_codes}),
      make_broker_invoice_entry_field(135,:bi_ent_paperless_certification,:paperless_certification,"Paperless Release Cert",:boolean,lambda {|entry| entry.paperless_certification}),
      make_broker_invoice_entry_field(136,:bi_ent_paperless_release,:paperless_release,"Paperless Entry Summary",:boolean,lambda {|entry| entry.paperless_release}),
      make_broker_invoice_entry_field(137,:bi_ent_pars_reject_date,:pars_reject_date,"PARS Reject Date",:datetime,lambda {|entry| entry.pars.pars_reject_date}),
      make_broker_invoice_entry_field(138,:bi_ent_pay_type,:pay_type,"Pay Type",:integer,lambda {|entry| entry.pay_type}),
      make_broker_invoice_entry_field(139,:bi_ent_recon_flags,:recon_flags,"Recon Flags",:string,lambda {|entry| entry.recon_flags}),
      make_broker_invoice_entry_field(140,:bi_ent_release_cert_message,:release_cert_message,"Release Certification Message",:string,lambda {|entry| entry.release_cert_message}),
      make_broker_invoice_entry_field(141,:bi_ent_ship_terms,:ship_terms,"Ship Terms (CA)",:string,lambda {|entry| entry.ship_terms}),
      make_broker_invoice_entry_field(142,:bi_ent_store_names,:store_names,"Store Names",:text,lambda {|entry| entry.store_names}),
      make_broker_invoice_entry_field(143,:bi_ent_type,:entry_type,"Entry Type",:string,lambda {|entry| entry.entry_type}),
      make_broker_invoice_entry_field(144,:bi_ent_unlading_port_code,:unlading_port_code,"Port of Unlading Code",:string,lambda {|entry| entry.unlading_port_code}),
      make_broker_invoice_entry_field(145,:bi_ent_us_exit_port_code,:us_exit_port_code,"US Exit Port Code",:string,lambda {|entry| entry.us_exit_port_code}),
      make_broker_invoice_entry_field(146,:bi_ent_vessel,:vessel,"Vessel/Airline",:string,lambda {|entry| entry.vessel}),
      make_broker_invoice_entry_field(147,:bi_ent_voyage,:voyage,"Voyage/Flight",:string,lambda {|entry| entry.voyage}),
      make_broker_invoice_entry_field(148,:bi_ent_worksheeet_date,:worksheet_date,"Worksheet Date",:date,lambda {|entry| entry.worksheet_date}),
      make_broker_invoice_entry_field(149,:bi_ent_census_warning, :census_warning,"Census Warning",:boolean,lambda {|entry| entry.census_warning}, lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(150,:bi_ent_charge_codes,:charge_codes,"Charge Codes Used",:string,lambda {|entry| entry.charge_codes},lambda {|u| u.view_broker_invoices?}),
      make_broker_invoice_entry_field(151,:bi_ent_employee_name,:employee_name,"Employee",:string,lambda {|entry| entry.employee_name},lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(152,:bi_ent_error_free_release,:error_free_release,"Error Free Release",:boolean,lambda {|entry| entry.error_free_release},lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(153,:bi_ent_expected_update_time,:expected_update_time,"Expected Update Time",:datetime,lambda {|entry| entry.expected_update_time},lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(154,:bi_ent_first_7501_print,:first_7501_print,"7501 Print Date - First",:datetime,lambda {|entry| entry.first_7501_print},lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(155,:bi_ent_first_entry_sent_date,:first_entry_sent_date,"First Summary Sent Date",:datetime,lambda {|entry| entry.first_entry_sent_date},lambda {|u| u.company.broker?}),
      make_broker_invoice_entry_field(156,:bi_ent_last_7501_print,:last_7501_print,"7501 Print Date - Last",:datetime,lambda {|entry| entry.last_7501_print},lambda {|u| u.company.broker?}),
      [157, :bi_ent_broker_invoice_total, :broker_invoice_total, "Total Broker Invoice", {
        :data_type=>:decimal,
        :currency=>:usd,
        :import_lambda => lambda {|inv,data| "#{label} cannot be set via invoice upload."},
        :export_lambda => lambda {|inv| inv.entry.blank? ? "" : inv.entry.broker_invoice_total},
        :qualified_field_name => "(SELECT #{field_reference} FROM entries where entries.id = broker_invoices.entry_id)",
        :can_view_lambda => lambda {|u| u.view_broker_invoices?}
      }],
      [158, :bi_ent_total_add, :total_add, "Total ADD", {
        :data_type=>:decimal,
        :currency=>:usd,
        :import_lambda => lambda {|inv,data| "#{label} cannot be set via invoice upload."},
        :export_lambda => lambda {|inv| inv.entry.blank? ? "" : inv.entry.total_add},
        :qualified_field_name => "(SELECT #{field_reference} FROM entries where entries.id = broker_invoices.entry_id)"
      }],
      [159, :bi_ent_total_cvd, :total_cvd, "Total CVD", {
        :data_type=>:decimal,
        :currency=>:usd,
        :import_lambda => lambda {|inv,data| "#{label} cannot be set via invoice upload."},
        :export_lambda => lambda {|inv| inv.entry.blank? ? "" : inv.entry.total_cvd},
        :qualified_field_name => "(SELECT #{field_reference} FROM entries where entries.id = broker_invoices.entry_id)"
      }]
    ]
  end
end; end; end;