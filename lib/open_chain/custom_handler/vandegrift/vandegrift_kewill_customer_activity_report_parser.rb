require 'open_chain/integration_client_parser'

# Parses a flat file report generated by Kewill and builds an Excel file report out of it.
module OpenChain; module CustomHandler; module Vandegrift; class VandegriftKewillCustomerActivityReportParser
  extend OpenChain::IntegrationClientParser

  def self.integration_folder
    ["www-vfitrack-net/vfi_kewill_customer_activity_report", "/home/ubuntu/ftproot/chainroot/www-vfitrack-net/vfi_kewill_customer_activity_report"]
  end

  def self.parse file_content, opts = {}
    self.new.parse_file file_content
  end

  def parse_file file_content
    subsections = split_lines_by_subsection file_content, "^VANDEGRIFT FORWARDING CO., INC.                       Customer Activity Report"

    wb = XlsMaker.new_workbook
    make_data_tab wb, subsections
    if subsections.length > 0 && subsections[0].length >= 4
      make_parameters_tab wb, subsections[0]
    end

    send_email wb, 'VFI_customer_activity_report', 'Alliance Report 300 - Customer Activity Report', ['vsicilia@vandegriftinc.com']

    nil
  end

  private
    # Breaks the data into grouped lines based by the header_line_match_text (e.g. every time the header line match
    # is made, a new grouping begins).  Strips out blank lines.
    def split_lines_by_subsection data, header_line_match_text
      subsections = []
      current_subsection_lines = nil
      StringIO.new(data).each do |line|
        if line.match(header_line_match_text)
          current_subsection_lines = []
          subsections << current_subsection_lines
        end
        if line.strip.length > 0 && current_subsection_lines
          current_subsection_lines << line
        end
      end
      subsections
    end

    def make_data_tab wb, subsections
      sheet = XlsMaker.create_sheet wb, "Data", ['Customer #','Name and Address','Mgr','Anyst','Slsmn','Terr','Add Date','Billing Amt','Revenue Amt','Profit%','Files']
      outbound_row_number = 1
      subsections.each do |section|
        inbound_row_number = 0
        section.each do |input_line|
          # Skip the first 7 rows.  That header content is repeated in every section.
          if inbound_row_number > 6
            # Ignore any lines that don't begin with a non-whitespace character.  We need only the "top" line from each
            # customer's data for the outbound report.
            if input_line.match("^\\w")
              # Working around alternate column widths of final 'grand totals' row.
              customer_number = input_line[0...11].strip
              customer_name = input_line[11...40].strip
              if customer_number == 'Grand Total' && customer_name == 's:'
                customer_number = 'Grand Totals'
                customer_name = ''
              end

              # Skip Company 01 (VFI) totals row since it's always identical to Grand Totals.
              if customer_number == 'Company 01' && customer_name == 'Totals'
                next
              end

              output_line = []
              # Customer #
              output_line << customer_number
              # Name and Address (which is really just a name)
              output_line << customer_name
              # Mgr
              output_line << input_line[40...44].strip
              # Anyst
              output_line << input_line[44...50].strip
              # Slsmn
              output_line << input_line[50...57].strip
              # Terr
              output_line << input_line[57...62].strip
              # Add Date
              output_line << input_line[62...78].strip
              # Billing Amt
              output_line << input_line[78...96].strip
              # Revenue Amt
              output_line << input_line[96...113].strip
              # Profit%
              output_line << input_line[113...124].strip
              # Files
              output_line << input_line[124...132].strip

              XlsMaker.add_body_row sheet, outbound_row_number, output_line
              outbound_row_number += 1
            end
          end
          inbound_row_number += 1
        end
      end

      XlsMaker.set_column_widths sheet, [15, 40, 10, 10, 10, 10, 15, 20, 20, 15, 10]
    end

    # This tab is really simple: it's just a dump of the first four lines of the top section (which are repeated over
    # all the subsections).  There's no formatting.
    def make_parameters_tab wb, section
      sheet = XlsMaker.create_sheet wb, "Parameters", []
      XlsMaker.add_body_row sheet, 0, [section[0].strip]
      XlsMaker.add_body_row sheet, 1, [section[1].strip]
      XlsMaker.add_body_row sheet, 2, [section[2].strip]
      XlsMaker.add_body_row sheet, 3, [section[3].strip]
    end

    def send_email workbook, file_name_prefix, subject, to_addr
      Tempfile.open([file_name_prefix, ".xls"]) do |outbound_file|
        Attachment.add_original_filename_method outbound_file, "#{file_name_prefix}_#{Time.zone.now.strftime("%Y-%m-%d")}.xls"
        workbook.write outbound_file
        outbound_file.flush
        outbound_file.rewind

        body_text = "Attached is a Kewill-based report."
        OpenMailer.send_simple_html(to_addr, subject, body_text, [outbound_file]).deliver!
      end
    end

end; end; end; end;