# To install the script for upstart purposes, run the following command:
# sudo cp chainio-web.conf /etc/init/chainio-web.conf
# sudo chmod 644 /etc/init/chainio-web.conf
#
# This script is not intended to be run directly by the upstart process.
#
# The chainio.conf upstart script will run it if the EC2 instance it is running 
# on has a Role tag w/ a value of 'Web'.
#
# This script will NOT run unless this instances is tagged with a Role of 'Web'.
# 
# NOTE: Due to the way Nginx/Passenger work by spawning lots of child processes, 
# the service cannot effectively be monitored and restarted by upstart.  
# As such, if the server crashes then you will have to re-issue
# the start command to restart it (or configure some sort of watchdog to do so).
#
# sudo start chainio-web

description "Start ChainIO Web Server"
author "Jeremy Hulford"

# No start on, we actually want our own script to initiate 
# the service only AFTER it sets up the aws config values
stop on runlevel [!2345]
 
env NGINX=/opt/nginx/sbin/nginx
env PID=/opt/nginx/logs/nginx.pid
env CONF=/opt/nginx/conf/nginx.conf
env TAG_FS_BASE=/etc/aws-fs/tags

console log
respawn
respawn limit 15 5

pre-start script
  $NGINX -t -c "${CONF}"
  if [ $? -ne 0 ]; then
    echo "Failed to start nginx due to an invalid configuration.  Run '$NGINX -t -c $CONF' for further details."
    exit $?
  fi

  # Verify the script is being run on a machine labeled as an actual web server as well
  ROLE=`cat "${TAG_FS_BASE}"/Role`
  if [ "$ROLE" != "Web" ]; then
    echo "Chain IO web server must be run from a machine tagged with a Role of 'Web'.  Role was ${ROLE}"
    exit 1
  fi

  echo "$(date) - Starting chain-web"
end script

post-start script
  # Run this in the background since the warmup script can take a bit of time to run
  # Otherwise the service appears to "hang" while the warmup script runs
  /home/ubuntu/chainio/wwwvfitracknet/script/warmup.sh &
  echo "$(date) - Warming chain-web"
end scipt
 
# Ensure nginx is shutdown gracefully
# Due to the way nginx forks, Upstart will be tracking the wrong PID so the following is needed to stop nginx
# This also needs to be run from the pre-stop stanza for the same reason (as opposed to a post-stop stanza)
pre-stop script
  echo "$(date) - Stopping chain-web"
end script

exec $NGINX -c "${CONF}" -g "daemon off;"
