# To install the script for upstart purposes, run the following command:
# sudo cp chainio-job-queue.conf /etc/init/chainio-job-queue.conf
# sudo chmod 644 /etc/init/chainio-job-queue.conf
#
# This script is not intended to be run directly by the upstart process.
#
# The chainio.conf upstart script will run it if the EC2 instance it is running 
# on has a Role tag w/ a value of 'Job Queue'.
#
# This script will NOT run unless this instances is tagged with a Role of 'Job Queue'.
# 
# Should you need to start/stop this script manually:
#
# sudo start chainio-job-queue
# sudo stop chainio-job-queue

description "Start / Monitor ChainIO Job Queue"
author "Jeremy Hulford"
console log

# No start on, we actually want our own script to initiate 
# the service only AFTER it sets up the aws config values
stop on runlevel [!2345]

env TAG_FS_BASE=/etc/aws-fs/tags

setuid ubuntu
chdir /home/ubuntu/chainio

respawn
respawn limit 15 5

pre-start script
  # Verify the script is being run on a machine labeled as an actual job queue
  ROLE=`cat "${TAG_FS_BASE}"/Role`
  if [ "$ROLE" != "Job Queue" ]; then
    echo "Chain IO job queue must be run from a machine tagged with a Role of 'Job Queue'.  Role was ${ROLE}"
    exit 1
  fi

  echo "$(date) - Starting chain-job-queue"
end script

pre-stop script
  echo "$(date) - Stopping chain-job-queue"
end script

script
# this script runs in /bin/sh by default
# respawn as bash so we can source in rvm
# quoted heredoc to tell /bin/sh not to interpret
# variables
exec /bin/bash <<'EOT'
  # set HOME to the setuid user's home, there doesn't seem to be a better, portable way
  export HOME="$(eval echo ~$(id -un))"

  if [ -f "$HOME/.rvm/scripts/rvm" ]; then
    source "$HOME/.rvm/scripts/rvm"
  fi

  export RAILS_ENV="production"
  cd "$HOME/chainio"

  exec "wwwvfitracknet/script/dj_monitor.sh" quiet
EOT
end script

