inherit_from:
  - .rubocop_strict.yml
  - .rubocop_missing_cops_todo.yml

inherit_mode:
  merge:
    - Exclude

require:
  - rubocop-rails
  - rubocop-rspec

AllCops:
  Exclude:
    - 'db/**/*'

Style/CommentAnnotation:
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

# Doesn't play well with our module declaration style
Style/Documentation:
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Style/MethodDefParentheses:
  Enabled: false

Style/NegatedIf:
  Enabled: false

Style/Next:
  Enabled: false

Style/NumericPredicate:
  Enabled: false

Style/RedundantSelf:
  Enabled: false

Style/Semicolon:
  Exclude:
    - 'spec/**/**'

Style/StringLiterals:
  Enabled: false

Style/StringLiteralsInInterpolation:
  Enabled: false

Style/TernaryParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses_when_complex

Style/TrailingBodyOnModule:
  Enabled: false

Style/TernaryParentheses:
  Enabled: false

Style/WordArray:
  Enabled: false

Style/ZeroLengthPredicate:
  Enabled: false

Layout/ArrayAlignment:
  Enabled: false
  EnforcedStyle: with_fixed_indentation

Layout/EmptyLineAfterGuardClause:
  Enabled: false

Layout/EmptyLinesAroundBlockBody:
  Enabled: false

Layout/EmptyLinesAroundClassBody:
  Enabled: false

Layout/EmptyLinesAroundModuleBody:
  Enabled: false

Layout/ExtraSpacing:
  Enabled: false

Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: indented_internal_methods

Layout/MultilineArrayBraceLayout:
  Enabled: false

Layout/SpaceInsideBlockBraces:
  Enabled: false

Layout/SpaceInsideHashLiteralBraces:
  Enabled: false

Layout/TrailingEmptyLines:
  Enabled: false

# This Cop does not play nice with our module declaration style.
Layout/EndAlignment:
  Enabled: false

# This Cop does not play nice with our module declaration style.
Layout/IndentationWidth:
  Enabled: false

Layout/LineLength:
  Max: 175

Lint/Loop:
  Enabled: false

Lint/ParenthesesAsGroupedExpression:
  Enabled: true
  Exclude:
    - spec/**/*

# I'm disabling the Metric cops. These metrics are useless and would be better if ran through CodeClimate which better
# explains what's going on rather than just spitting out files that fail the checks.
# While I could glob disable, I am going to disable one by one in case we choose to add one in later.
Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Naming/MethodParameterName:
  Enabled: true
  Exclude:
    - spec/**/*

RSpec/AnyInstance:
  Enabled: false

RSpec/ContextWording:
  Enabled: false

RSpec/ExampleLength:
  Enabled: false

# Unfortunately, when this project was set up, it used a bad path for the rspec files
# so pretty much all our exisiting specs are bad.
RSpec/FilePath:
  Enabled: false

# We're ok using direct 'subject' references in tests
RSpec/NamedSubject:
  Enabled: false

# We're ok having multiple expectations - I can't imaging the number of examples we'd
# have for parsers and other things if we didn't allow this
RSpec/MultipleExpectations:
  Enabled: false

# Allow stub'ing some methods on the subject - this can be a code smell, but it's
# useful often enough to be able to isolate methods under test that I'm allowing it.
RSpec/SubjectStub:
  Enabled: false
