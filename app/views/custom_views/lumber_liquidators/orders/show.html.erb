<%require 'open_chain/custom_handler/lumber_liquidators/lumber_custom_definition_helper'%>
<%asn_cdefs = [
  :ord_shipment_reference, :ord_shipment_booking_requested_date, :ord_shipment_booking_number, :ord_shipment_sent_to_carrier_date, :ord_shipment_booking_confirmed_date, 
  :ord_bill_of_lading, :ord_bol_date, :ord_shipment_cargo_ready_date, :ord_shipment_booking_cutoff_date,
  :ord_asn_booking_submitted,:ord_asn_booking_approved,:ord_asn_empty_out_gate_at_origin,:ord_asn_est_arrival_discharge,
  :ord_asn_est_departure,:ord_asn_gate_in,:ord_asn_empty_return,:ord_asn_delivered,:ord_asn_container_unloaded,
  :ord_asn_carrier_released,:ord_asn_customs_released_carrier,:ord_asn_available_for_delivery,:ord_asn_full_ingate,
  :ord_asn_gate_out,:ord_asn_on_rail_destination,:ord_asn_rail_arrived_destination,:ord_asn_arrived,:ord_asn_departed,
  :ord_asn_discharged,:ord_asn_loaded_at_port,:ord_asn_arrive_at_transship_port,:ord_asn_depart_from_transship_port,
  :ord_asn_barge_depart,:ord_asn_barge_arrive,:ord_asn_fcr_created
]%>
<%cdefs = OpenChain::CustomHandler::LumberLiquidators::LumberCustomDefinitionHelper.prep_custom_definitions([
  :prodven_risk,:prodven_carb,:prodven_patent,:prod_old_article,:prod_merch_cat_desc,:prod_merch_cat,
  :ordln_pc_approved_by,:ordln_pc_approved_date,
  :ordln_pc_approved_by_executive,:ordln_pc_approved_date_executive,
  :ordln_qa_approved_by,:ordln_qa_approved_date,
  :ord_change_log,
  :ord_planned_handover_date,:ord_ship_confirmation_date,
  :ord_forecasted_handover_date, :ord_forecasted_ship_window_start,
  :ord_sap_vendor_handover_date,:ord_planned_expected_delivery_date,
  :ord_sap_extract, :ord_avail_to_prom_date,:ord_qa_hold_by,
  :ord_qa_hold_date,:ord_inspector_assigned,:ord_inspection_date_planned,:ord_inspection_date_completed,
  :ord_testing_date_planned,:ord_testing_date_completed,
  :ordln_old_art_number, :ordln_part_name, :ord_manual_send_to_sap_date, :ordln_inland_freight_vendor_number,
  :ordln_inland_freight_amount, :ordln_custom_article_description, :ord_grand_total, :ord_total_freight,
  :ordln_gross_weight_kg,:ordln_shpln_line_number,:ordln_shpln_product,:ordln_shpln_quantity,:ordln_shpln_cartons,
  :ordln_shpln_volume,:ordln_shpln_gross_weight,:ordln_shpln_container_number,:ordln_deleted_flag,
  :ordln_po_create_article, :ordln_po_create_quantity, :ordln_po_create_hts, :ordln_po_create_price_per_unit, :ordln_po_create_total_price, :ordln_po_create_country_origin, 
  :ordln_po_create_bol, :ordln_po_create_container_number, :ordln_po_create_seal_number, :ordln_po_booked_article, :ordln_po_booked_quantity, :ordln_po_booked_hts, 
  :ordln_po_booked_price_per_unit, :ordln_po_booked_total_price, :ordln_po_booked_country_origin, :ordln_po_booked_bol, :ordln_po_booked_container_number, 
  :ordln_po_booked_seal_number, :ordln_po_shipped_article, :ordln_po_shipped_quantity, :ordln_po_shipped_hts, :ordln_po_shipped_price_per_unit, :ordln_po_shipped_total_price, 
  :ordln_po_shipped_country_origin, :ordln_po_shipped_bol, :ordln_po_shipped_container_number, :ordln_po_shipped_seal_number, :ord_snapshot_discrepancy_comment] +asn_cdefs)%>
<%rule_state = @order.business_rules_state_for_user(current_user)%>
<script type='text/javascript'>

  $("window").ready(function() {
    $("[data-toggle='popover']").popover({html:true});
  });
  $(function() {

    var updateStatusIndicators = function(lineCount) {
      var pcApproveCount = $('[data-is-pc-approved="true"]').length;
      var qaApproveCount = $('[data-is-qa-approved="true"]').length;
      var qaIcon = lineCount==qaApproveCount ? 'fa-check text-success' : 'fa-exclamation-triangle text-warning';
      var pcIcon = lineCount==pcApproveCount ? 'fa-check text-success' : 'fa-exclamation-triangle text-warning';
      $('#qa-status-indicator').addClass(qaIcon);
      $('#pc-status-indicator').addClass(pcIcon);
    };
    updateStatusIndicators(<%=@order.order_lines.size%>);
    $(document).on('click','[state-toggle-id]',function(evt) {
      var t = $(this);
      var dataHash = {button_id:t.attr('state-toggle-id')};
      $.ajax('/api/v1/'+t.attr('state-toggle-path')+'/'+t.attr('state-toggle-obj-id')+'/toggle_state_button',{
        type:'POST',
        headers: {
          Accept : "application/json",
          "Content-Type": "application/json"
        },
        data: JSON.stringify(dataHash),
        success: function(response) {
          t.parent().html("<small>Update sucessful. Reload to see data.</small>");
        },
        error: function() {
          window.alert('Update failed. Please reload and try again.');
        }
      });
    });

    $("[id^=lnk_det_s_]").click(function(e) {
      e.preventDefault();
      var lineId = e.currentTarget.id.split('_')[3]
      OpenChain.showOrderLineDetail(lineId,<%=current_user.admin? ? 'true' : 'false' %>);
      $('#lnk_det_h_' + lineId).show();
      $('#lnk_det_s_' + lineId).hide();
      return false;
    });

    $("[id^=lnk_det_h_]").click(function(e) {
      e.preventDefault();
      var lineId = e.currentTarget.id.split('_')[3]
      $('#det_' + lineId).fadeOut('slow');
      $('#lnk_det_s_' + lineId).show();
      $('#lnk_det_h_' + lineId).hide();
      return false;
    });

  });
</script>
<style type="text/css">
  .shaded-bg {
    background-color: #f9f9f9;
  }
</style>

<% content_for :action_bar do %>
  <%if @order.can_edit?(current_user)%>
    <button class='btn_link' link_to='<%=edit_order_path(@order)%>' title='Edit'><i class='fa fa-pencil'></i></button>
  <%end%>
  <button class='btn_link' link_to='<%=history_order_path(@order)%>' key_map='h' title='History'><i class='fa fa-history'></i></button>
  <button class='btn_link' link_to='<%=vendor_portal_direct_link(@order)%>' title='Vendor Portal'><i class='fa fa-industry'></i></a>
  <%if MasterSetup.get.custom_feature?("Bulk Send Order To SAP")%>
    <button class='btn_link' link_to='<%=send_to_sap_order_path(@order)%>' title='Send To SAP'>Send To SAP</button>
  <%end%>
<% end %>
<div class="container">
  <%=render partial: '/shared/business_rules', locals:{base_object:@order,rule_state:rule_state,validation_path:validation_results_order_path(@order)}%>
  <% if @order.closed? %>
    <div class="row">
      <div class="col-md-12">
        <div class="card alert-warning">
            <div class="card-header">Order Closed</div>
            <div class="card-body">
              Order closed <%=@order.closed_at%> <%if @order.closed_by%>by <%=@order.closed_by.full_name%><%end%>
            </div>
        </div>
      </div>
    </div>
  <% end %>
  <div class="row" style='margin-bottom:1em;'>
    <div class="col-md-4">
      <%= show_model_fields @order, [:ord_ord_num] %>
      <% if @order.vendor %>
        <%vendor_name_fld = ModelField.find_by_uid(:ord_ven_name)%>
        <%=field_bootstrap vendor_name_fld.label, link_to(vendor_name_fld.process_export(@order, User.current), vendor_path(@order.vendor)) %>
      <% end %>
      <%= show_model_fields @order, [:ord_ven_syscode, :ord_cust_ord_no, :ord_approval_status, :ord_accepted_at, :ord_accepted_by, :ord_imp_name, :ord_agent_name, :ord_div_name, :ord_factory_name, :ord_ship_to_name, :ord_payment_terms, :ord_terms, :ord_fob_point] %>
      <hr />
      <% if OpenChain::CustomHandler::LumberLiquidators::LumberOrderPdfGenerator.multi_shipto?(@order, User.current) %>
      <%   ship_to_hdr = "Multi-Stop" %>
      <% elsif @order.order_lines.length > 0 && @order.order_lines.first.ship_to %>
      <%   ship_to_hdr = @order.order_lines.first.ship_to.full_address_array.join('<br>').to_s.html_safe %>
      <% end %>
      <% #Uses Ship To detail label rather than header label: value pulled is from order detail, even though it's displayed at header. %>
      <%=field_bootstrap ModelField.find_by_uid(:ordln_ship_to_id).label(false), ship_to_hdr %>
      <hr />
      <%=show_custom_fields @order, {skip_fields:([:ord_planned_expected_delivery_date,:ord_inspector_assigned,:ord_forecasted_handover_date,:ord_forecasted_ship_window_start,:ord_planned_handover_date,:ord_ship_confirmation_date,:ord_sap_extract, :ord_manual_send_to_sap_date, :ord_avail_to_prom_date,:ord_sap_vendor_handover_date,:ord_qa_hold_date,:ord_qa_hold_by,:ord_inspection_date_planned,:ord_inspection_date_completed,:ord_testing_date_planned,:ord_change_log,:ord_testing_date_completed,:ord_total_freight,:ord_grand_total]+asn_cdefs).collect{|key| cdefs[key].model_field_uid}}%>
    </div>
    <div class="col-md-4">
      <%= show_model_fields @order, [:ord_ord_date, :ord_window_start, :ord_window_end, cdefs[:ord_planned_expected_delivery_date].model_field_uid] %>
      <hr />
      <%= show_model_fields @order, [:ord_planned_handover_date,:ord_forecasted_ship_window_start,:ord_forecasted_handover_date,:ord_ship_confirmation_date].collect {|key| cdefs[key].model_field_uid} << :ord_first_exp_del%>
      <hr />
      <%= show_model_fields @order, [:ord_sap_extract].collect {|key| cdefs[key].model_field_uid}%>
      <%= show_model_fields @order, [:ord_manual_send_to_sap_date].collect {|key| cdefs[key].model_field_uid}%>
      <hr />
      <%= show_model_fields @order, [:ord_avail_to_prom_date,:ord_sap_vendor_handover_date].collect {|key| cdefs[key].model_field_uid}%>
      <hr />
      <%= show_model_fields @order, [:ord_qa_hold_by,:ord_qa_hold_date,:ord_inspector_assigned,:ord_inspection_date_planned,:ord_inspection_date_completed,:ord_testing_date_planned,:ord_testing_date_completed].collect {|key| cdefs[key].model_field_uid}%>
    </div>
    <div class="col-md-4">
      <%= show_model_fields(@order, asn_cdefs.collect {|key| cdefs[key].model_field_uid }) do |mf, field_name, value, html_attributes|
          # We need to make a link to the shipment if the field is the shipment reference
          v = nil
          if mf.uid.to_s == cdefs[:ord_shipment_reference].model_field_uid && !value.blank?
            shipment = Shipment.where(reference: value).first
            v = link_to(value, shipment_path(shipment)) if shipment
          end
          v
        end
      %>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12">
      <ul class="nav nav-tabs">
        <li class="nav-item active"><a id="main-tab" class="nav-link active" href="#main" data-toggle="tab" role="tab">Main</a></li>
        <li class="nav-item"><a id="compliance-tab" class="nav-link" href="#compliance" data-toggle="tab" role="tab">Compliance <i class='fa' id='pc-status-indicator'></i></a></li>
        <li class="nav-item"><a id="quality-tab" class="nav-link" href="#quality" data-toggle="tab" role="tab">Quality <i class='fa' id='qa-status-indicator'></i></a></li>
        <li class="nav-item"><a id="carbpatent-tab" class="nav-link" href="#carbpatent" data-toggle="tab" role="tab">CARB/Patent</a></li>
        <li class="nav-item"><a id="asn-tab" class="nav-link" href="#asn" data-toggle="tab" role="tab">ASN Data</a></li>
        <li class="nav-item"><a id="snapshot-tab" class="nav-link" href="#snapshot" data-toggle="tab" role="tab">Snapshot</a></li>
      </ul>

      <!-- Tab panes -->
      <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="main" aria-labelledby="main-tab">
          <table class="table table-sm table-condensed table-bordered">
            <thead>
              <tr>
                <%= model_field_labels([:ordln_line_number,  cdefs[:ordln_deleted_flag].model_field_uid, :prod_uid, "*fhts_1_#{Country.where(iso_code: "US").first.id}_order_lines", :ordln_ordered_qty, :ordln_unit_of_measure, cdefs[:ordln_gross_weight_kg].model_field_uid, :ordln_ppu, :ordln_total_cost], table:true, heading:true) %>
                <th>&nbsp;</th>
              </tr>
            </thead>
            <tbody>
              <% @order.order_lines.each do |line| %>
                <tr class='ord_det_row'>
                  <%= show_model_fields(line, :ordln_line_number, table: true, editor_only: true) %>
                  <td>
                    <%=cdefs[:ordln_deleted_flag].model_field.process_export(line,User.current) ? 'Y' : 'N'%>
                  </td>
                  <td>
                    <small><%=link_to(ModelField.find_by_uid(:prod_uid).process_export(line.product, User.current), product_path(line.product)) %></small><br/>
                    <small><%=cdefs[:ordln_old_art_number].model_field.process_export(line,User.current)%></small><br />
                    <%=cdefs[:ordln_part_name].model_field.process_export(line,User.current)%>
                  </td>
                  <%= show_model_fields(line, ["*fhts_1_#{Country.where(iso_code: "US").first.id}_order_lines", :ordln_ordered_qty, :ordln_unit_of_measure, cdefs[:ordln_gross_weight_kg].model_field_uid, :ordln_ppu, :ordln_total_cost], table: true, editor_only: true, never_hide: true) do |mf, form_field_name, field_value, html_attributes|
                    if mf.uid.to_s == cdefs[:ordln_gross_weight_kg].model_field_uid
                      field_value.nil? ? '' : number_with_precision(field_value, precision: 3)
                    else
                      nil
                    end
                  end -%>
                  <td>
                    <a id='lnk_det_s_<%=line.id%>' href="#">Detail</a>
                    <a id='lnk_det_h_<%=line.id%>' style='display:none;' href="#">Detail</a>
                  </td>
                </tr>
                <tr style='display:none;' id='det_<%=line.id%>'>
                  <td>&nbsp;</td>
                  <td colspan='<%=ModelField.viewable_model_fields(User.current, [:ordln_line_number, :prod_uid, :ordln_sku, :ordln_ordered_qty, :ordln_unit_of_measure, :ordln_ppu, :ordln_currency, :ordln_total_cost]).size + 4%>' >
                    <div class="container col-md-6">
                      <%= show_model_fields line, [:ordln_country_of_origin, :ordln_hts] %>
                      <%= show_custom_fields line, {skip_fields:([:ordln_inland_freight_vendor_number,:ordln_inland_freight_amount, :ordln_custom_article_description, :ordln_gross_weight_kg,:ordln_deleted_flag]).collect{|key| cdefs[key].model_field_uid}} %>
                      <%= show_model_fields(line, cdefs[:ordln_custom_article_description].model_field, {}) { |mf, field_name, value, html_attributes| "<div style='white-space: pre-wrap;'>#{html_escape value}</div>".html_safe} unless line.custom_value(cdefs[:ordln_custom_article_description]).blank? %>
                      <% if ModelField.find_by_uid(:shp_ref).can_view?(User.current) %>
                      <%Set.new(line.shipment_lines.collect{|sl| sl.shipment}).each do |s|%>
                      <% next unless s.can_view?(User.current) %>
                      <%=field_bootstrap "Shipment", link_to(ModelField.find_by_uid(:shp_ref).process_export(s, User.current), s) %>
                      <%end%>
                      <% end %>
                      <% if OpenChain::CustomHandler::LumberLiquidators::LumberOrderPdfGenerator.multi_shipto?(@order, User.current) && line.ship_to %>
                      <%   ship_to_dtl = line.ship_to.full_address_array.join('<br>').to_s.html_safe %>
                      <%=  field_bootstrap ModelField.find_by_uid(:ordln_ship_to_name).label(false), ship_to_dtl %>
                      <% end %>
                    </div>
                  </td>
                </tr>
              <%end %>
            </tbody>
          </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="compliance" aria-labelledby="compliance-tab">
          <table class="table table-condensed table-sm table-striped table-bordered">
            <thead>
              <tr>
                <%= model_field_labels([:ordln_line_number, :prod_uid,
                  :ordln_varuid,
                  :ordln_ordered_qty, :ordln_unit_of_measure, :ordln_ppu, :ordln_total_cost,
                  cdefs[:prodven_risk].model_field_uid,
                  cdefs[:ordln_pc_approved_by].model_field_uid
                ], table:true, heading:true) %>
                <th>
                  Actions
                </th>
              </tr>
            </thead>
            <tbody>
              <% @order.order_lines.each do |line| %>
                <%exec_pc_approved = !line.get_custom_value(cdefs[:ordln_pc_approved_date_executive]).value.blank?%>
                <%pc_approved_date = cdefs[:ordln_pc_approved_date].model_field.process_export(line,User.current)%>
                <%is_pc_approved = exec_pc_approved || !pc_approved_date.blank?%>
                <tr data-is-pc-approved="<%=is_pc_approved ? 'true' : 'false'%>">
                  <%= show_model_fields(line, :ordln_line_number, table: true, editor_only: true) %>
                  <td>
                    <small><%=link_to(ModelField.find_by_uid(:prod_uid).process_export(line.product, User.current), product_path(line.product)) %></small><br/>
                    <small><%=cdefs[:ordln_old_art_number].model_field.process_export(line,User.current)%></small><br />
                    <%=cdefs[:ordln_part_name].model_field.process_export(line,User.current)%>
                  </td>
                  <%= show_model_fields(line, [:ordln_varuid,:ordln_ordered_qty, :ordln_unit_of_measure, :ordln_ppu, :ordln_total_cost], table: true, editor_only: true) %>
                  <%line_risk = cdefs[:prodven_risk].model_field.process_export(line.product.product_vendor_assignments.where(vendor_id:@order.vendor_id).first, User.current)%>
                  <td class='<%=line_risk.blank? ? "danger" : ""%>'>
                    <%=line_risk%>
                  </td>
                  <td>
                    <%if exec_pc_approved%>
                      <%=ModelField.find_by_uid("*uf_#{cdefs[:ordln_pc_approved_by_executive].id}_fullname".to_sym).process_export(line,User.current)%><br />
                      <small><%=cdefs[:ordln_pc_approved_date_executive].model_field.process_export(line,User.current)%></small>
                    <% else %>
                      <%=ModelField.find_by_uid("*uf_#{cdefs[:ordln_pc_approved_by].id}_fullname".to_sym).process_export(line,User.current)%><br />
                      <small><%=pc_approved_date%></small>
                    <% end %>
                  </td>
                  <td>
                    <%=state_toggle_buttons(line,User.current,button_class:'btn btn-sm')%>
                  </td>
                </tr>
              <%end %>
            </tbody>
          </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="quality" aria-labelledby="quality-tab">
          <table class="table table-condensed table-sm table-striped table-bordered">
            <thead>
              <tr>
                <%= model_field_labels([:ordln_line_number, :prod_uid, cdefs[:prod_merch_cat].model_field_uid, :ordln_ordered_qty, :ordln_unit_of_measure,
                  cdefs[:ordln_qa_approved_by].model_field_uid
                ], table:true, heading:true) %>
                <th>
                  Actions
                </th>
              </tr>
            </thead>
            <tbody>
              <% @order.order_lines.each do |line| %>
              <%qa_approved_date = cdefs[:ordln_qa_approved_date].model_field.process_export(line,User.current)%>
                <tr data-is-qa-approved="<%=qa_approved_date.blank? ? 'false' : 'true'%>">
                  <%= show_model_fields(line, :ordln_line_number, table: true, editor_only: true) %>
                  <td>
                    <small><%=link_to(ModelField.find_by_uid(:prod_uid).process_export(line.product, User.current), product_path(line.product)) %></small><br/>
                    <small><%=cdefs[:ordln_old_art_number].model_field.process_export(line,User.current)%></small><br />
                    <%=cdefs[:ordln_part_name].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <small><%=cdefs[:prod_merch_cat].model_field.process_export(line.product,User.current)%></small><br />
                    <%=cdefs[:prod_merch_cat_desc].model_field.process_export(line.product,User.current)%>
                  </td>
                  <%= show_model_fields(line, [:ordln_ordered_qty, :ordln_unit_of_measure], table: true, editor_only: true) %>
                  <td>
                    <%=ModelField.find_by_uid("*uf_#{cdefs[:ordln_qa_approved_by].id}_fullname".to_sym).process_export(line,User.current)%><br />
                    <small><%=qa_approved_date%></small>
                  </td>
                  <td>
                    <%=state_toggle_buttons(line,User.current,button_class:'btn btn-sm')%>
                  </td>
                </tr>
              <%end %>
            </tbody>
          </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="carbpatent" aria-labelledby="carbpatent-tab">
          <table class="table table-condensed table-sm table-striped table-bordered">
            <thead>
              <tr>
                <%= model_field_labels([:ordln_line_number, :prod_uid,
                  :ordln_ordered_qty, :ordln_unit_of_measure,
                  cdefs[:prodven_carb].model_field_uid,
                  cdefs[:prodven_patent].model_field_uid
                ], table:true, heading:true) %>
              </tr>
            </thead>
            <tbody>
              <% @order.order_lines.each do |line| %>
                <%line_carb = cdefs[:prodven_carb].model_field.process_export(line.product.product_vendor_assignments.where(vendor_id:@order.vendor_id).first, User.current)%>
                <%line_patent = cdefs[:prodven_patent].model_field.process_export(line.product.product_vendor_assignments.where(vendor_id:@order.vendor_id).first, User.current)%>
                <tr>
                  <%= show_model_fields(line, :ordln_line_number, table: true, editor_only: true) %>
                  <td>
                    <small><%=link_to(ModelField.find_by_uid(:prod_uid).process_export(line.product, User.current), product_path(line.product)) %></small><br/>
                    <small><%=cdefs[:ordln_old_art_number].model_field.process_export(line,User.current)%></small><br />
                    <%=cdefs[:ordln_part_name].model_field.process_export(line,User.current)%>
                  </td>
                  <%= show_model_fields(line, [:ordln_ordered_qty, :ordln_unit_of_measure], table: true, editor_only: true) %>
                  <td>
                    <%=line_carb%>
                  </td>
                  <td>
                    <%=line_patent%>
                  </td>
                </tr>
              <%end %>
            </tbody>
          </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="asn" aria-labelledby="asn-tab">
          <table class="table table-condensed table-sm table-striped table-bordered">
            <thead>
              <tr>
                <%= model_field_labels([:ordln_line_number, :prod_uid, cdefs[:ordln_shpln_line_number].model_field_uid,
                          cdefs[:ordln_shpln_quantity].model_field_uid, cdefs[:ordln_shpln_cartons].model_field_uid,
                          cdefs[:ordln_shpln_volume].model_field_uid, cdefs[:ordln_shpln_gross_weight].model_field_uid,
                          cdefs[:ordln_shpln_container_number].model_field_uid
                         ], table:true, heading:true) %>
              </tr>
            </thead>
            <tbody>
            <% @order.order_lines.each do |line| %>
                <tr>
                  <%= show_model_fields(line, :ordln_line_number, table: true, editor_only: true) %>
                  <td>
                    <small><%=link_to(ModelField.find_by_uid(:prod_uid).process_export(line.product, User.current), product_path(line.product)) %></small><br/>
                    <small><%=cdefs[:ordln_old_art_number].model_field.process_export(line,User.current)%></small><br />
                    <%=cdefs[:ordln_part_name].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <%=cdefs[:ordln_shpln_line_number].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <%=cdefs[:ordln_shpln_quantity].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <%=cdefs[:ordln_shpln_cartons].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <%=cdefs[:ordln_shpln_volume].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <%=cdefs[:ordln_shpln_gross_weight].model_field.process_export(line,User.current)%>
                  </td>
                  <td>
                    <%=cdefs[:ordln_shpln_container_number].model_field.process_export(line,User.current)%>
                  </td>
                </tr>
            <%end %>
            </tbody>
          </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="snapshot" aria-labelledby="snapshot-tab">
          <table class="table table-condensed table-sm table-bordered">
            <thead>
              <tr>
                <th>&nbsp;</th>
                <th>Order Line</th>
                <th>Article</th>
                <th>COO</th>
                <th>Quantity</th>
                <th>HTS</th>
                <th>Price/Unit</th>
                <th>Total Price</th>
                <th>BOL</th>
                <th>Container</th>
                <th>Seal</th>
              </tr>
              </thead>
            <tbody>
            <% @order.order_lines.each_with_index do |line, idx| 
              html_class = (idx % 2 == 1) ? "" : "shaded-bg"
              class_text = (idx % 2 == 1) ? "" : " class=\"#{html_class}\"".html_safe
            %>
              <tr>
                <th<%=class_text%>>Created</th>
                <td class="has_numeric <%=html_class%>"><%=line.line_number%></td>
              <% [:ordln_po_create_article, :ordln_po_create_country_origin, :ordln_po_create_quantity, :ordln_po_create_hts, :ordln_po_create_price_per_unit, 
                  :ordln_po_create_total_price, :ordln_po_create_bol, :ordln_po_create_container_number, :ordln_po_create_seal_number].each do |cdef_uid| %>
                <td<%=class_text%>><%=cdefs[cdef_uid].model_field.process_export(line, User.current)%></td>
              <% end %>
              </tr>
              <tr>
                <th<%=class_text%>>Booked</th>
                <td class="has_numeric <%=html_class%>"><%=line.line_number%></td>
              <% [:ordln_po_booked_article, :ordln_po_booked_country_origin, :ordln_po_booked_quantity, :ordln_po_booked_hts, :ordln_po_booked_price_per_unit, 
                  :ordln_po_booked_total_price, :ordln_po_booked_bol, :ordln_po_booked_container_number, :ordln_po_booked_seal_number].each do |cdef_uid| %>
                <td <%=class_text%>><%=cdefs[cdef_uid].model_field.process_export(line, User.current)%></td>
              <% end %>
              </tr>
              <tr>
                <th<%=class_text%>>Shipped</th>
                <td class="has_numeric <%=html_class%>"><%=line.line_number%></td>
              <% [:ordln_po_shipped_article, :ordln_po_shipped_country_origin, :ordln_po_shipped_quantity, :ordln_po_shipped_hts, :ordln_po_shipped_price_per_unit, 
                  :ordln_po_shipped_total_price, :ordln_po_shipped_bol, :ordln_po_shipped_container_number, :ordln_po_shipped_seal_number].each do |cdef_uid| %>
                <td<%=class_text%>><%=cdefs[cdef_uid].model_field.process_export(line, User.current)%></td>
              <% end %>
              </tr>
            <% end %>
            </tbody>
          </table>
        </div>
      </div>

    </div>
  </div>
  <div class="row">
    <div class="col-md-12">
      <p><font color="red"><b><i><%= OpenChain::CustomHandler::LumberLiquidators::LumberOrderPdfGenerator.carb_statement @order %></i></b></font></p>
    </div>
  </div>
  
  <% lacey =  OpenChain::CustomHandler::LumberLiquidators::LumberOrderPdfGenerator.lacey_statement @order %>
  <% if lacey %>
    <div class="row">
      <div class="col-md-12">
        <p><font color="red"><b><i><%= lacey %></i></b></font></p>
      </div>
    </div>
  <% end %>
  
  <div class="row">
    <div class="col-md-6">
      <%=render :partial => 'shared/folders', :locals => {:obj => @order} %>
      <div>
        <h3>Change Log</h3>
<pre><%=@order.custom_value(cdefs[:ord_change_log])%></pre>
      </div>
    </div>
    <div class="col-md-6">
      <%=render :partial => 'shared/comments', :locals => {:commentable => @order} %>
      <%=render :partial => 'shared/attachments', :locals => {:attachable => @order} %>
    </div>
  </div>
</div>

<%=render :partial => 'shared/integration_file_link', :locals => {:obj => @order, :user => current_user} %>
