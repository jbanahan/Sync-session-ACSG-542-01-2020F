<%require 'open_chain/custom_handler/lumber_liquidators/lumber_custom_definition_helper'%>
<%cdefs = OpenChain::CustomHandler::LumberLiquidators::LumberCustomDefinitionHelper.prep_custom_definitions([:prodven_risk,:prod_merch_cat,:prod_merch_cat_desc])%>
<%risk_def = cdefs[:prodven_risk]%>
<%merch_cat_uid = "#{cdefs[:prod_merch_cat].model_field_uid}_product_vendor_assignment"%>
<%merch_cat_desc_uid = "#{cdefs[:prod_merch_cat_desc].model_field_uid}_product_vendor_assignment"%>
<div class='container-fluid'>
  <div class='row'>
    <select id='ll-pva-filter' class='form-control'>
      <option value='all' selected='selected'>All Products</option>
      <option value='risk-blank-all'>No Risk Assigned (All)</option>
      <option value='risk-blank-ordered'>No Risk Assigned (Ordered)</option>
      <option value='risk-high'>High</option>
      <option value='risk-medium'>Medium</option>
      <option value='risk-low'>Low</option>
      <option value='risk-grandfathered'>Grandfathered</option>
      <option value='risk-autoflow'>Auto-Flow</option>
    </select>
  </div>
  <div class='row' id='ll-product-panel-row'>
    <div class='loader'>
      loading
    </div>
  </div>
  <div class="row">
    <button class="btn btn-secondary" id="ll-load-more">Load More</button>
    <%if risk_def.model_field.can_edit?(current_user)%>
      <button class="btn btn-primary" data-toggle="modal" data-target="#ll-risk-edit" disabled="disabled" id='ll-risk-modal-activate'>
        Edit Risk
      </button>
    <%end%>
    <%if @company.can_edit?(current_user) %>
      <button class="btn btn-success" data-toggle="modal" data-target="#ll-product-add">
        <i class='fa fa-plus'></i>
      </button>
    <%end%>
  </div>
</div>
<div class="modal fade" id="ll-product-add" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Add Products</h4>
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
      </div>
      <div class="modal-body">
        <textarea id='ll-products-to-add' class='form-control' placeholder='One article # per line.'></textarea>
        <label for='ll-add-risk-select'>Risk Level</label>
        <select id='ll-add-risk-select' class='form-control'>
          <option value=''></option>
          <%risk_def.model_field.field_validator_rule.one_of_array.each do |so|%>
            <option><%=so%></option>
          <%end%>
        </select>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id='ll-add-products'>Add</button>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="ll-risk-edit" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Edit Risk</h4>
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
      </div>
      <div class="modal-body">
        <div class="alert alert-info">You have <span id='ll-risk-checked-count'>0</span> products selected.</div>
        <select id='ll-risk-select' class='form-control'>
          <option value=''>Clear</option>
          <%risk_def.model_field.field_validator_rule.one_of_array.each do |so|%>
            <option><%=so%></option>
          <%end%>
        </select>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" data-dismiss="modal" id='ll-risk-save'>Save</button>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
  function LLProductVariantAssignmentGetPage(page,callback) {
    pageSize = 50;
    filterOptions = {
      'risk-high':{sid1:'<%=risk_def.model_field_uid%>',sop1:'eq',sv1:'High'},
      'risk-medium':{sid1:'<%=risk_def.model_field_uid%>',sop1:'eq',sv1:'Medium'},
      'risk-low':{sid1:'<%=risk_def.model_field_uid%>',sop1:'eq',sv1:'Low'},
      'risk-grandfathered':{sid1:'<%=risk_def.model_field_uid%>',sop1:'eq',sv1:'Grandfathered'},
      'risk-autoflow':{sid1:'<%=risk_def.model_field_uid%>',sop1:'eq',sv1:'Auto-Flow'},
      'risk-blank-all':{sid1:'<%=risk_def.model_field_uid%>',sop1:'null'},
      'risk-blank-ordered':{
        sid1:'<%=risk_def.model_field_uid%>',
        sop1:'null',
        sid2:'prodven_prod_ord_count',
        sop2:'gt',
        sv2:'0'
      }
    };
    filterOpts = function() {
      optionVal = filterOptions[$('#ll-pva-filter').val()]
      return optionVal ? optionVal : {}
    }
    data = filterOpts()
    if(page) {
      data.page = page;
    }
    data.per_page = pageSize;
    data.sid99 = 'prodven_vend_dbid';
    data.sop99 = 'eq';
    data.sv99 = '<%=@company.id%>';
    $('#ll-load-more').hide();
    $.ajax('/api/v1/product_vendor_assignments.json', {
      method:'GET',
      headers: {
        Accept : "application/json",
        "Content-Type": "application/json"
      },
      data:data,
      success: function(response) {
        var i, pva, html, riskHtmlFn;
        riskHtmlFn = function(obj) {
          var riskDefUid = '<%=risk_def.model_field_uid%>';
          return writeVal(obj,riskDefUid);
        }
        merchCatHtmlFn = function(obj) {
          var merchCatUid = '<%=merch_cat_uid%>';
          var merchCatDescUid = '<%=merch_cat_desc_uid%>';
          var mc = writeVal(obj,merchCatUid);
          var mcd = writeVal(obj,merchCatDescUid);
          var r = '';
          if(mcd.length > 0) {
            r = mcd;
            if(mc.length > 0) {
              r += " ("+mc+")";
            }
          }
          return r;
        }
        writeVal = function(obj,field) {
          return obj[field] ? obj[field] : '';
        }
        var canEditRisk = <%=risk_def.model_field.can_edit?(current_user) ? 'true' : 'false'%>;

        if(response.results.length==pageSize) {
          $('#ll-load-more').show();
        }

        html = '';
        if(response.results.length==0) {
          html+="<tr><td colspan='5'><div class='alert alert-info'>No products found.</div></td></tr>"
        }
        for (i = 0; i < response.results.length; i++) {
          pva = response.results[i];
          html += "<tr><td><input type='checkbox' data-pva-id='"+pva.id+"'/></td><td><a href='/products/"+pva.product_id+"'>View</a></td>";
          html += "<td>"+writeVal(pva,'prodven_puid')+"</td>";
          html += "<td>"+writeVal(pva,'prodven_pname')+"</td>";
          html += "<td>"+merchCatHtmlFn(pva)+"</td>"
          html += "<td>"+riskHtmlFn(pva)+"</td></tr>";
        }
        callback(html);
      }
    });
  }
  function LLProductVariantAssignmentLoad() {
    $('#ll-product-panel-row').html("<div class='loader'>loading</div>");
    LLProductVariantAssignmentGetPage(1,function(rowHtml) {
      html = "<div><table class='table table-condensed table-striped table-sm'>";
      html += "<thead><tr><th><input type='checkbox' id='ll-product-select-all' /></th><th></th><th>Article #</th><th>Name</th><th>Merch Cat</th><th>Risk</th></tr></thead>";
      html += "<tbody id='ll-product-panel-body' data-page='1'>";
      html += rowHtml;
      html += "</tbody></table></div>";
      LLProductVariantAssignmentUpdateChecked();
      $('#ll-product-panel-row').html(html);
    });
  };
  function LLProductVariantAssignmentLoadMore() {
    var bod = $('#ll-product-panel-body');
    var nextPage = 1;
    var lastPage = bod.attr('data-page');
    if(lastPage) {
      nextPage = parseInt(lastPage) + 1;
    }
    bod.attr('data-page',nextPage)
    LLProductVariantAssignmentGetPage(nextPage,function(rowHtml) {
      bod.append(rowHtml);
    });
  }
  function LLProductVariantAssignmentUpdateChecked() {
    var checkedCount = $('input[data-pva-id]:checked').length
    if(checkedCount > 0) {
      $('#ll-risk-modal-activate').removeAttr('disabled');
    } else {
      $('#ll-risk-modal-activate').attr('disabled','disabled');
    }
    $('#ll-risk-checked-count').html(checkedCount);
  };
  $(function() {
    if(!window.llProductVariantAssignmentCallbacksSet) {
      $(document).on('change','#ll-product-select-all',function(evt) {
        checkAll = $(this).prop('checked');
        $('input[data-pva-id]').prop('checked',checkAll);
        $('input[data-pva-id]:first').change(); //changing property doesn't fire change event which we need to activate the edit risk button
      });
      $(document).on('click','#ll-add-products',function(evt) {
        uidsToAdd = function(str) {
          var rv;
          var rows = str.split(/\r\n|\r|\n/);
          var toReturn = [];
          for (var i = 0; i < rows.length; i++) {
            rv = rows[i].trim();
            if(rv.length > 0) {
              rv = ("000000000000000000"+rv).substring(rv.length);
              toReturn.push(rv);
            }
          }
          return toReturn;
        };
        var prod_uids = uidsToAdd($('#ll-products-to-add').val());
        var vendor_ids = [<%=@company.id%>];
        var product_vendor_assignment = {}
        product_vendor_assignment["<%=risk_def.model_field_uid%>"] = $('#ll-add-risk-select').val();

        if(prod_uids.length>100) {
          window.alert("You can only enter 100 products at a time. You've entered "+prod_uids.length+".");
          return;
        }

        $('#ll-product-add').modal('hide');
        $('#ll-product-panel-row').html("<div class='loader'>loading</div>");
        $.ajax('/api/v1/product_vendor_assignments/bulk_create',{
          type:'POST',
          headers: {
            Accept : "application/json",
            "Content-Type": "application/json"
          },
          data: JSON.stringify({prod_uids:prod_uids,vendor_ids:vendor_ids,product_vendor_assignment:product_vendor_assignment}),
          success: function(response) {
            $('#ll-products-to-add').val('');
            LLProductVariantAssignmentLoad();
            window.alert("Save successful.\n"+response.messages.join("\n"));
          },
          error: function() {
            window.alert('Save failed. Please reload and try again.');
          }
        });
      });
      $(document).on('click','#ll-load-more',LLProductVariantAssignmentLoadMore);
      $(document).on('change','#ll-pva-filter',LLProductVariantAssignmentLoad);
      $(document).on('change','input[data-pva-id]',LLProductVariantAssignmentUpdateChecked);
      $(document).on('click','#ll-risk-save',function() {
        var checked = $('input[data-pva-id]:checked')
        if(checked.length==0) {
          window.alert('You must select at least one product to save.');
          return;
        }
        var riskVal = $('#ll-risk-select').val();
        var submitArray = [];
        for (var i = 0; i < checked.length; i++) {
          dbId = $(checked[i]).attr('data-pva-id');
          obj = {id:dbId};
          obj['<%=risk_def.model_field_uid%>'] = riskVal;
          submitArray.push(obj);
        }
        $('#ll-product-panel-row').html("<div class='loader'>loading</div>");
        $.ajax('/api/v1/product_vendor_assignments/bulk_update.json', {
          type:'PUT',
          headers: {
            Accept : "application/json",
            "Content-Type": "application/json"
          },
          data: JSON.stringify({product_vendor_assignments:submitArray}),
          success: function(response) {
            LLProductVariantAssignmentLoad();
            window.alert('Products saved successfully.')
          },
          error: function() {
            window.alert('Save failed. Please reload and try again.');
          }
        });
      });
      window.llProductVariantAssignmentCallbacksSet = true;
    }
    LLProductVariantAssignmentLoad();
  });
</script>
